name: 'PR'
on: pull_request

jobs:
  pr-actions:
    name: "PR Actions"
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/labeler
      - name: Add Labels
        uses: actions/labeler@v2
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'

      # https://github.com/actions/github-script
      - name: Automerge Dependabot
        if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'
        uses: actions/github-script@v3
        with:
          script: |
            github.pullRequests.createReview({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number,
              event: 'APPROVE'
            })
            github.pullRequests.merge({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number
            })
          github-token: ${{github.token}}  

      - name: Welcome
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            // Get a list of all issues created by the PR opener
            // See: https://octokit.github.io/rest.js/#pagination
            const creator = context.payload.sender.login
            const opts = github.issues.listForRepo.endpoint.merge({
              ...context.issue,
              creator,
              state: 'all'
            })
            const issues = await github.paginate(opts)

            for (const issue of issues) {
              if (issue.number === context.issue.number) {
                continue
              }

              if (issue.pull_request) {
                return // Creator is already a contributor.
              }
            }

            await github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Welcome, new contributor!'
            })
